#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    // automouse-layer = <4>;

    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R                        &kp T                                                      &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &kp D         &kp F                        &kp G      &kp TAB                          &mo 8          &kp H        &kp J  &kp K      &kp L    &lt 5 ESCAPE
&kp Z      &kp X         &kp C         &kp V                        &kp B      &kp LEFT_SHIFT                   &mo 7          &kp N        &kp M  &kp COMMA  &kp DOT  &kp LEFT_SHIFT
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &lt_to_layer_0 4 LANGUAGE_2  &kp SPACE  &lt_to_layer_0 5 LANGUAGE_1      &kp BACKSPACE  &lt 1 ENTER                             &lt 6 SLASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&trans                  &trans                &trans             &kp RS(RG(LEFT_BRACKET))  &kp RS(RG(RIGHT_BRACKET))                      &kp F5  &kp F12  &trans  &trans  &trans
&kp RS(LC(TAB))         &kp LC(TAB)           &trans             &trans                    &kp RG(SPACE)              &trans      &trans  &trans  &trans   &trans  &trans  &trans
&kp RG(RS(LEFT_ARROW))  &kp RS(RG(UP_ARROW))  &kp RS(RG(RIGHT))  &trans                    &trans                     &trans      &trans  &trans  &trans   &trans  &trans  &trans
&trans                  &trans                &trans             &trans                    &trans                     &trans      &trans  &trans                           &trans
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4   &kp N5                                          &kp NUMBER_6  &kp N7      &kp N8     &kp N9         &kp N0
&trans          &kp TILDE     &kp PIPE        &kp BACKSLASH  &kp SLASH  &kp LC(LA(KP_NUMBER_0))      &trans  &kp COMMA     &kp PERIOD  &kp GRAVE  &kp SQT        &kp DOUBLE_QUOTES
&kp LEFT_SHIFT  &none         &kp UNDERSCORE  &kp MINUS      &kp PLUS   &kp EQUAL                    &trans  &trans        &trans      &kp COLON  &kp SEMICOLON  &kp LEFT_SHIFT
&trans          &trans        &trans          &trans         &trans     &trans                       &trans  &trans                                              &trans
            >;
        };

        ARROW {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN       &kp HASH              &kp DOLLAR             &kp PERCENT                       &kp CARET       &kp AMPERSAND   &kp ASTERISK  &trans           &trans
&kp LEFT_BRACE   &kp RIGHT_BRACE   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp QUESTION  &trans      &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&kp LESS_THAN    &kp GREATER_THAN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans        &trans      &trans  &trans          &trans          &trans        &trans           &trans
&trans           &trans            &trans                &trans                 &trans        &trans      &trans  &trans                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        setting {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        shortcut {
            bindings = <
&kp RG(Q)  &kp RG(W)  &trans     &kp RG(R)                    &kp RG(T)                                                  &kp Y        &kp U  &kp I      &kp O    &kp P
&kp RG(A)  &kp RG(S)  &trans     &kp RG(F)                    &trans     &trans                           &trans         &kp H        &kp J  &kp K      &kp L    &lt 5 ESCAPE
&kp RG(Z)  &kp RG(X)  &kp RG(C)  &kp RG(V)                    &trans     &trans                           &trans         &kp N        &kp M  &kp COMMA  &kp DOT  &kp LEFT_SHIFT
&trans     &trans     &trans     &lt_to_layer_0 4 LANGUAGE_2  &kp SPACE  &lt_to_layer_0 5 LANGUAGE_1      &kp BACKSPACE  &lt 1 ENTER                             &lt 6 SLASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
